class Program {
  constructor() {
    this.opts = {};
  }
  option(flags, desc, fn, defVal) {
    const match = /--([a-zA-Z0-9-]+)/.exec(flags);
    if (match) {
      this.opts[match[1].replace(/-([a-z])/g, (m, c) => c.toUpperCase())] = defVal;
    }
    return this;
  }
  parse(argv) {
    for (let i = 2; i < argv.length; i++) {
      const arg = argv[i];
      switch (arg) {
        case '-c':
        case '--checks':
          this.opts.checks = argv[++i];
          break;
        case '-f':
        case '--file':
          this.opts.file = argv[++i];
          break;
        case '-u':
        case '--url':
          this.opts.url = argv[++i];
          break;
      }
    }
    Object.assign(this, this.opts);
    return this;
  }
}
module.exports = new Program();
